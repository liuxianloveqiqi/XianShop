// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"XianShop/service/user/rpc/internal/logic"
	"XianShop/service/user/rpc/internal/svc"
	"XianShop/service/user/rpc/types/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) SendCode(ctx context.Context, in *user.SendCodeRep) (*user.SendCodeReply, error) {
	l := logic.NewSendCodeLogic(ctx, s.svcCtx)
	return l.SendCode(in)
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterReq) (*user.CommonReply, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.CommonReply, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) UserInfo(ctx context.Context, in *user.UserInfoReq) (*user.CommonReply, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}
